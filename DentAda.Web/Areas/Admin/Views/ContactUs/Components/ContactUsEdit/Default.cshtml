@model DentAda.Business.ViewModel.Administration.ContactUsVM
@{
    Layout = "~/Views/Shared/_AjaxLayout.cshtml";
}
@section pageLevelInlineScripts {
    <script>
        jQuery(document).ready(function ()
        {
            $("input[maxlength]").maxlength({
                alwaysShow: true,
                placement: 'right'
            });

            $("#cbDepartment").change(function () {
                reInvokeComponent();
            });
            function reInvokeComponent()
            {
                $.post("@Url.Action("ReInvokeEditComponent", new { area = "Admin", controller = "ContactUs" })", { Department:  $("#cbDepartment").val() }, function(result){ $("#contactUsContent").html(result); });
            }
            $(".btnSave").click(function (event) {
                event.preventDefault();

                var fileData = new FormData();
                var formSerializeArray = $("form#submit_form").serializeArray();
                formSerializeArray.forEach(function (item)
                {
                    fileData.append(item.name, item.value);
                });
                $.validator.unobtrusive.parse($("form#submit_form"));

                $("form#submit_form").validate();
                if ($("form#submit_form").valid())
                {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Save", new { area = "Admin", controller = "ContactUs" })",
                        contentType: false,
                        processData: false,
                        beforeSend: KTApp.blockPage({
                            overlayColor: '#333',
                            opacity: 0.6,
                            type: 'v2',
                            state: 'success',
                            message: "İşleminiz gerçekleştiriliyor lütfen bekleyiniz..."
                        }),
                        data: fileData,
                        success: function (result)
                        {
                            KTApp.unblockPage();
                            if (result.status == "1")
                            {
                                swal.fire("Başarılı", result.message, "success");
                                reInvokeComponent();
                            }
                        },
                        error: function (err)
                        {
                            KTApp.unblockPage();
                            if (err) { swal.fire("Hata", err, "error"); }
                        }
                    });
                } else
                {
                    toastr.warning("Lütfen Zorunlu alanları doldurunuz!");

                }
            });
            $(".btnDel").click(function (event) {
                event.preventDefault();
                swal.fire({
                  title: 'Bu kaydı silmek istediğinizden emin misiniz?',
                  type: 'warning',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Evet'
                }).then((result) => {
                  if (result.value) {
                        server.ajaxCall(
                            "@Url.Action("Delete", new { area = "Admin", controller = "ContactUs" })", //İstek Adresi
                            function (result) { // success function callback

                                if (result.status == 1)
                                {
                                    swal.fire({
                                        title: "Başarılı!",
                                        text: result.message,
                                        type: "success"
                                    }).then(function() {
                                        reInvokeComponent();
                                    });
                                } else
                                {
                                    swal.fire({
                                        title: "Hata!",
                                        text: result.message,
                                        type: "error"
                                    });
                                }

                            },
                            function (err) { // error function callback
                                if (err) { swal.fire("Hata", err, "error"); }
                            },
                            { idContactUs: $(".btnDel").data("id")}, //data
                            null,
                            this, // context erişimi için successcallback içerisinde thatLocal olarak kullanılabilir
                            'post' // istek yöntemi
                        );
                  }
                })
            });


        });
    </script>
}
@section pageLevelStyles {
}
@section pageLevelInlineStyles {
}
@section pageLevelPlugins {

    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

}
<div class="kt-portlet">
    <div class="kt-portlet__head">
        <div class="kt-portlet__head-label">
            <span class="kt-portlet__head-icon">
                <i class="fa fa-phone-square"></i>
            </span>
            <h3 class="kt-portlet__head-title">

                İletişim

            </h3>
        </div>
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-actions">
                <button type="button" class="btn btn-success btn-elevate btn-elevate-air btnSave"><i class="fa fa-save"></i>Kaydet</button>
                @if (Model.IdContactUs > 0)
                {
                    <button type="button" data-toggle="kt-tooltip" data-placement="top" title="" data-original-title="Sil" class="btn btn-danger btn-elevate btn-elevate-air btnDel" data-id="@Model.IdContactUs"><i class="flaticon-delete"></i> Sil </button>
                }

            </div>
        </div>
    </div>
    <form novalidate id="submit_form" class="horizontal-form" enctype="multipart/form-data">
        @Html.HiddenFor(m => m.IdContactUs)
        <div class="kt-portlet__body">

            <div class="form-group row">
                <label class="col-2 col-form-label">Şube:</label>
                <div class="col-3">
                    @Html.DropDownListFor(m => m.Department, new SelectList(ViewBag.DepartmentList, "Value", "Text"), new { @class = "form-control kt-selectpicker", @id = "cbDepartment" })
                    @Html.ValidationMessageFor(m => m.Department, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                <label class="col-2 col-form-label">Adres:</label>
                <div class="col-6">
                    @Html.TextAreaFor(m => m.Address, new { @class = "form-control", style = "min-height:100px; max-height:250px", @maxlength = "500"  })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">E-Posta:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @maxlength = "40" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Telefon:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @maxlength = "14"  })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">GSM:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.GSM, new { @class = "form-control", @maxlength = "14"  })
                    @Html.ValidationMessageFor(m => m.GSM, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Fax:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Fax, new { @class = "form-control", @maxlength = "14"  })
                    @Html.ValidationMessageFor(m => m.Fax, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Facebook:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Facebook, new { @class = "form-control", @maxlength = "70"  })
                    @Html.ValidationMessageFor(m => m.Facebook, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Twitter:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Twitter, new { @class = "form-control", @maxlength = "30"  })
                    @Html.ValidationMessageFor(m => m.Twitter, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <label class="col-2 col-form-label">Instagram:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Instagram, new { @class = "form-control", @maxlength = "30" })
                    @Html.ValidationMessageFor(m => m.Instagram, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Youtube:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Youtube, new { @class = "form-control", @maxlength = "70"  })
                    @Html.ValidationMessageFor(m => m.Youtube, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Linkedin:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.Linkedin, new { @class = "form-control", @maxlength = "70"  })
                    @Html.ValidationMessageFor(m => m.Linkedin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-2 col-form-label">Google+:</label>
                <div class="col-6">
                    @Html.TextBoxFor(m => m.GooglePlus, new { @class = "form-control", @maxlength = "70"  })
                    @Html.ValidationMessageFor(m => m.GooglePlus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="kt-portlet__foot">
            <div class="row">
                <div class="col-lg-2"></div>
                <div class="col-lg-10">
                    <button type="button" class="btn btn-success btn-elevate btn-elevate-air btnSave"><i class="fa fa-save"></i>Kaydet</button>
                </div>
            </div>
        </div>
    </form>
</div>

