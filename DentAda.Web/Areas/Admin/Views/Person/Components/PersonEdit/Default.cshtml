@model DentAda.Business.ViewModel.Administration.PersonVM
@{
    Layout = "~/Views/Shared/_AjaxLayout.cshtml";
}
@section pageLevelInlineScripts {
    <script>
        var vanilla;
        jQuery(document).ready(function ()
        {
            $("#customFile").on("change", function (event) {
                var image = document.querySelector("#instrumentImage");
                image.src = URL.createObjectURL(event.target.files[0]);
                //readFile(this);
            });


            $(".btnSave").click(function (event) {
                event.preventDefault();

                //var fileUpload = $("#customFile").get(0);
                //var files = fileUpload.files;
                //var fileData = new FormData();
                //if (files.length > 0) {
                //    fileData.append(files[0].name, files[0]);
                //} else {
                //    fileData.append("Picture", $("#Picture").val());
                //}
                //fileData.append("IdPerson", $("#IdPerson").val());
                //fileData.append("Department",$("input[name='Department']:checked").val());
                //fileData.append("Description", $( "#Description" ).val());


                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save", new { area = "Admin", controller = "Person" })",
                    contentType: false,
                    processData: false,
                    beforeSend: KTApp.blockPage({
                        overlayColor: '#333',
                        type: 'v2',
                        state: 'success',
                        message: "İşleminiz gerçekleştiriliyor lütfen bekleyiniz..."
                    }),
                   data: $("$submit_form").serialize(),
                   success: function (result) {
                          KTApp.unblockPage();
                       if (result.status == "1") {
                        swal.fire("Başarılı", result.message, "success");
                       }
                    },
                   error: function (err) {
                        KTApp.unblockPage();
                        if (err) { swal.fire("Hata", err, "error"); }
                    }
                });
            });

            $(".btnDel").click(function (event) {
                event.preventDefault();


                swal.fire({
                  title: 'Bu kaydı silmek istediğinizden emin misiniz?',
                  type: 'warning',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Evet'
                }).then((result) => {
                  if (result.value) {
                        server.ajaxCall(
                            "@Url.Action("Delete", new { area = "Admin", controller = "Person" })", //İstek Adresi
                            function (result) { // success function callback

                                if (result.status == 1)
                                {
                                    swal.fire({
                                        title: "Başarılı!",
                                        text: result.message,
                                        type: "success"
                                    }).then(function() {
                                        reInvokeComponent();
                                    });
                                } else
                                {
                                    swal.fire({
                                        title: "Hata!",
                                        text: result.message,
                                        type: "error"
                                    });
                                }

                            },
                            function (err) { // error function callback
                                if (err) { swal.fire("Hata", err, "error"); }
                            },
                            { idPerson: $(".btnDel").data("id")}, //data
                            this, // context erişimi için successcallback içerisinde thatLocal olarak kullanılabilir
                            'post' // istek yöntemi
                        );
                  }
                })
            });


            var items = [];
            var map = {};

            $('#thUniversity').typeahead({
                hint: true,
                highlight: true,
                minLength: 2
            }, {
                name: 'university',
                source: function (query, process) {
                        $.ajax({
                            url: '@Url.Action("GetUniversity", new { area = "Admin", controller = "Person" })',
                            type: "POST",
                            cache: false,
                            async: false,
                            data: { search: query },
                            success : function (data) {
                                    $.each(JSON.parse(data), function (i, item) {
                                        var id = item.IdUniversity;
                                        var name = item.Name;
                                        map[name] = {
                                            id: id,
                                            name: name
                                        };
                                        items.push(name);

                                    });
                                console.log(items);
                             return process(items);
                            }
                        });
                }
                }).on("typeahead:selected", function (obj, company) {
                       //console.log(map[company]);
                       //console.log(JSON.stringify(company));
                       //console.log(obj);
             });



		    function readFile(input) {
 			    if (input.files && input.files[0]) {
	                var reader = new FileReader();
	                reader.onload = function (e) {
                        vanilla.bind({
	            		    url: e.target.result,
                            orientation: 1,
                        });
	                }
	                reader.readAsDataURL(input.files[0]);
	            }
	            else {
                        console("error image crop");
		        }
		    }

			vanilla = new Croppie(document.getElementById('cropTool'), {
                enableExif: true,
                enableOrientation: true,
                viewport: {
                    width: 300,
                    height: 300,
                },
                boundary: {
                    width: 350,
                    height: 350
                }
		    });

        });
    </script>
}
@section pageLevelStyles {
    <link href="~/lib/croppie/croppie.css" rel="stylesheet" />
}
@section pageLevelInlineStyles {
}
@section pageLevelPlugins {

    <script src="/assets/vendors/general/typeahead.js/dist/typeahead.bundle.js" type="text/javascript"></script>
    <script src="/lib/croppie/croppie.js"></script>

}

<form novalidate id="submit_form" class="horizontal-form" enctype="multipart/form-data">

    @Html.HiddenFor(m => m.IdUniversity)
    <div class="kt-portlet__body">
        <div class="kt-align-right">
            <button type="button" class="btn btn-danger btn-elevate btn-elevate-air btnDel" data-id="@Model.IdUniversity"><i class="flaticon-delete"></i> Sil </button>&nbsp;
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Şubeler:</label>
            <div class="col-6">
                <div class="kt-radio-inline">
                    <label class="kt-radio">
                        @Html.RadioButtonFor(m => m.Department, "1", new { @class = "rbCayyolu" }) Çayyolu
                        <span></span>
                    </label>
                    <label class="kt-radio">
                        @Html.RadioButtonFor(m => m.Department, "2", new { @class = "rbPolatli" }) Polatlı
                        <span></span>
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Fotoğraf</label>
            <div class="col-10">
                <div class="custom-file col-4 align-top">
                    <input type="file" name="files" class="custom-file-input" id="customFile">
                    <label class="custom-file-label" for="customFile">Choose file</label>
                </div>
                <div class="kt-margin-t-20">
                    <img alt="" id="instrumentImage" src="/assets/media/users/100_4.jpg" class="img-thumbnail" style="max-height:300px" />
                </div>
            </div>
        </div>
        <div id="cropTool"></div>


        <div class="form-group row">
            <label class="col-2 col-form-label">Adı:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Soyadı:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Unvan:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Meslek:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Profession, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Telefon:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">GSM:</label>
            <div class="col-6">
                @Html.TextBoxFor(m => m.Gsm, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Hakkında:</label>
            <div class="col-6">
                @Html.TextAreaFor(m => m.About, new { @class = "form-control", style = "min-height:100px; max-height:250px" })
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Üniversite:</label>
            <div class="col-6">
                <div class="typeahead">
                    <input class="form-control" id="thUniversity" type="text" placeholder="Üniversite adı girin.">
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Fakülte:</label>
            <div class="col-6">
                <div class="typeahead">
                    <input class="form-control" id="thFaculty" type="text" placeholder="Fakülte adı girin.">
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-2 col-form-label">Bölüm:</label>
            <div class="col-6">
                <div class="typeahead">
                    <input class="form-control" id="thUniversityDepartment" type="text" placeholder="Bölüm adı girin.">
                </div>
            </div>
        </div>

    </div>

    <div class="kt-portlet__foot">
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-10">
                <button type="submit" class="btn btn-brand btn-elevate btn-elevate-air btnSave"><i class="fa fa-save"></i>Kaydet</button>
            </div>
        </div>
    </div>
</form>
