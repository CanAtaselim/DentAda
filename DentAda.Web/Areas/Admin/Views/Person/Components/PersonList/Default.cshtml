@model IEnumerable<DentAda.Business.ViewModel.Administration.PersonVM>
@using DentAda.Business.ViewModel.Administration
@using DentAda.Common;
@{
    Layout = "~/Views/Shared/_AjaxLayout.cshtml";
}
@section pageLevelInlineScripts {
    <script>

        jQuery(document).ready(function ()
        {
            $(".btnEdit").click(function () {
                $.post("@Url.Action("Edit", new { area = "Admin", controller = "Person" })", { idPerson: $(this).data("id") }, function(result){ $("#personContent").html(result); });
            });
            $(".btnNew").click(function () {
                $.post("@Url.Action("Edit", new { area = "Admin", controller = "Person" })", function(result){ $("#personContent").html(result); });
            });

            $(".btnDel").click(function (event) {
                event.preventDefault();
                var that = this;
                swal.fire({
                  title: 'Bu kaydı silmek istediğinizden emin misiniz?',
                  type: 'warning',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Evet'
                }).then((result) => {
                  if (result.value) {
                        server.ajaxCall(
                            "@Url.Action("Delete", new { area = "Admin", controller = "Person" })", //İstek Adresi
                            function (result) { // success function callback

                                if (result.status == 1)
                                {
                                    swal.fire({
                                        title: "Başarılı!",
                                        text: result.message,
                                        type: "success"
                                    }).then(function() {
                                        $.post("@Url.Action("List", new { area = "Admin", controller = "Person" })", function (result) { $("#personContent").html(result); });
                                    });
                                } else
                                {
                                    swal.fire({
                                        title: "Hata!",
                                        text: result.message,
                                        type: "error"
                                    });
                                }

                            },
                            function (err) { // error function callback
                                if (err) { swal.fire("Hata", err, "error"); }
                            },
                            { idPerson: $(that).data("id")}, //data
                            null,
                            this, // context erişimi için successcallback içerisinde thatLocal olarak kullanılabilir
                            'post' // istek yöntemi
                        );
                  }
                })
            });
        });
    </script>
}
@section pageLevelStyles {
    <style>
        .table td {
            vertical-align: middle
        }
    </style>
}
@section pageLevelInlineStyles {
}
@section pageLevelPlugins {



}

<div class="kt-portlet">
    <div class="kt-portlet__head">
        <div class="kt-portlet__head-label">
            <span class="kt-portlet__head-icon">
                <i class="fa fa-users"></i>
            </span>
            <h3 class="kt-portlet__head-title">
                Çalışan Listesi
            </h3>
        </div>
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-actions">
                <button type="button" class="btn btn-brand btn-elevate btn-elevate-air btnNew"><i class="fa fa-plus"></i> Yeni Personel Ekle </button>&nbsp;
            </div>
        </div>
    </div>
    <div class="kt-portlet__body">
        <div class="kt-section" style="margin:0px;">
            <div class="kt-section__content">
                @if (Model.Count() > 0)
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Çalışan Tipi</th>
                                <th>Ad Soyad</th>
                                <th>Unvan</th>
                                <th>Meslek</th>
                                <th>Telefon</th>
                                <th>GSM</th>
                                <th>Üniversite</th>
                                <th>Fakülte</th>
                                <th>Bölüm</th>

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (PersonVM item in Model)
                            {
                                <tr>
                                    <td width="10px">
                                        <div class="btn-group btn-group-sm" role="group" aria-label="First group">
                                            <button type="button" data-id="@item.IdPerson" class="btn btn-info btn-icon btnEdit"><i class="la la-edit"></i></button>
                                            <button type="button" data-id="@item.IdPerson" class="btn btn-danger btn-icon btnDel"><i class="flaticon-delete"></i></button>
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            string myClass = "";
                                            if (item.EmployeeType == 1)
                                            {
                                                myClass = "kt-badge--success";
                                            }
                                            else
                                            {
                                                myClass = "kt-badge--warning";
                                            }
                                        }
                                        <span class="kt-badge kt-badge--inline @myClass">
                                            @_Enumeration.GetEnumDescription((_Enumeration._EmployeeType)Enum.ToObject(typeof(_Enumeration._EmployeeType), item.EmployeeType))
                                        </span>
                                    </td>
                                    <td>@item.Name @item.Surname</td>
                                    <td>@item.Title</td>
                                    <td>@item.Profession</td>
                                    <td>@item.Phone</td>
                                    <td>@item.Gsm</td>
                                    <td>@item.UniversityName</td>
                                    <td>@item.FacultyName</td>
                                    <td>@item.UniversityDepartmentName</td>
                                </tr>

                            }
                        </tbody>
                    </table>
                }
                else
                {

                    <div style="margin-bottom:0px;" class="alert alert-warning" role="alert">
                        <strong>Kayıt Bulunamadı!</strong>
                    </div>
                }
            </div>
        </div>
    </div>
</div>




